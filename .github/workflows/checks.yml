name: Checks

on: workflow_call

jobs:

  version-check-job:
    name: Version Check
    runs-on: ubuntu-latest

    steps:

      - name: SCM Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@0.8.0

      - name: Check Version(s)
        run: poetry run version-check version.py

  build-documentation-job:
    name: Build Documentation
    needs: [version-check-job]
    runs-on: ubuntu-latest

    steps:
      - name: SCM Checkout
        uses: actions/checkout@v3

      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@0.9.0

      - name: Build Documentation
        run: |
          poetry run python -m nox -s build-docs

  lint-job:
    name: Linting (Python-${{ matrix.python-version }})
    needs: [version-check-job]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
      - name: SCM Checkout
        uses: actions/checkout@v3

      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@0.9.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run Tests
        run: poetry run nox -s lint

  type-check-job:
    name: Type Checking (Python-${{ matrix.python-version }})
    needs: [version-check-job]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]

    steps:
      - name: SCM Checkout
        uses: actions/checkout@v3

      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@0.9.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run Tests
        run: poetry run nox -s type-check

  tests-job:
    name: Tests (Python-${{ matrix.python-version }}, Exasol-${{ matrix.exasol-version}})
    needs: [build-documentation-job, lint-job, type-check-job]
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        exasol-version: ["7.1.9"]

    steps:
      - name: SCM Checkout
        uses: actions/checkout@v3

      - name: Setup Python & Poetry Environment
        uses: exasol/python-toolbox/.github/actions/python-environment@0.9.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Run Tests and Calculate Coverage
        env:
          SAAS_HOST: ${{ secrets.INTEGRATION_TEAM_SAAS_STAGING_HOST }}
          SAAS_ACCOUNT_ID: ${{ secrets.INTEGRATION_TEAM_SAAS_STAGING_ACCOUNT_ID }}
          SAAS_PAT: ${{ secrets.INTEGRATION_TEAM_SAAS_STAGING_PAT }}
          PYTEST_ADDOPTS: -o log_cli=true -o log_cli_level=INFO
        run: |
          export PROJECT_SHORT_TAG=$(poetry run nox -s get-project-short-tag)
          poetry run nox -s coverage -- --

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: .coverage
          path: .coverage
